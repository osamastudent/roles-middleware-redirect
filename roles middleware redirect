<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class CheckRole
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    
//      public function handle(Request $request, Closure $next, $role)
//      {
//          if (!Auth::check()) {
//              return redirect()->route('login'); 
//          }
 
//          // Check if the user has the required role
//          if (Auth::user()->role !== $role) {
//             return back()->with('error', 'You do not have access to this page.');
//          }
//  // Allow the request to proceed if the role matches
//          return $next($request); 
//      }
    
    
    public function handle(Request $request, Closure $next, $role)
    {
        if (!Auth::check()) {
            return redirect()->route('login');
        }
    
        if (Auth::user()->role !== $role) {
            // Instead of back(), send to correct dashboard
            return $this->redirectToRoleDashboard();
        }
    
        return $next($request);
    }
    protected function redirectToRoleDashboard()
    {
        $role = Auth::user()->role;
    
        return match ($role) {
            'admin' => redirect()->route('dashboard'),
            'hr' => redirect()->route('hr.dashboard'),
            'sales' => redirect()->route('sales.dashboard'),
            'finance' => redirect()->route('finance.dashboard'),
            'recruiter' => redirect()->route('recruiter.dashboard'),
            default => redirect()->route('login')->with('error', 'Role not recognized'),
        };
    }

    
}
